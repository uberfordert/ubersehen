{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"col-span-5 lg:col-span-2 lg:col-start-2 col-start-1\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"grid grid-cols-3 gap-5 lg:m-3 m-2\"\n};\nconst _hoisted_4 = {\n  class: \"col-span-3 text-center lg:text-4xl text-xl\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SwiperSlide = _resolveComponent(\"SwiperSlide\");\n  const _component_Swiper = _resolveComponent(\"Swiper\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Swiper, {\n    ref: \"swiperRef\",\n    class: \"\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.products, product => {\n      return _openBlock(), _createBlock(_component_SwiperSlide, {\n        key: product.id\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"img\", {\n          src: product.imageUrl,\n          alt: product.alt,\n          class: \"mx-auto rounded-2xl\"\n        }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Replace size buttons with text field \"), _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedSize = $event),\n          class: \"lg:mx-5 mx-3 border-b border-gray-500 focus:outline-none focus:border-fuchsia-500\",\n          placeholder: \"Enter Size\"\n        }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedSize]])])])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Swiper","ref","default","_withCtx","_Fragment","_renderList","$props","products","product","_createBlock","_component_SwiperSlide","key","id","_createElementVNode","src","imageUrl","alt","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","type","_cache","$event","$data","selectedSize","placeholder","_"],"sources":["/Users/uberfordertt/Documents/GitHub/uberfordert/ubersehen/src/components/SwiperGallery.vue"],"sourcesContent":["<template>\n    <div class=\"col-span-5 lg:col-span-2 lg:col-start-2 col-start-1\">\n      <Swiper ref=\"swiperRef\" class=\"\">\n        <SwiperSlide v-for=\"product in products\" :key=\"product.id\">\n          <img\n            :src=\"product.imageUrl\"\n            :alt=\"product.alt\"\n            class=\"mx-auto rounded-2xl\"\n          />\n          <div class=\"grid grid-cols-3 gap-5 lg:m-3 m-2\">\n            <div class=\"col-span-3 text-center lg:text-4xl text-xl\">\n              <!-- Replace size buttons with text field -->\n              <input\n                type=\"text\"\n                v-model=\"selectedSize\"\n                class=\"lg:mx-5 mx-3 border-b border-gray-500 focus:outline-none focus:border-fuchsia-500\"\n                placeholder=\"Enter Size\"\n              />\n            </div>\n          </div>\n        </SwiperSlide>\n      </Swiper>\n    </div>\n  </template>\n  \n  <script>\n  import { Swiper, SwiperSlide } from 'swiper/vue';\n  \n  export default {\n    components: {\n      Swiper,\n      SwiperSlide,\n    },\n    props: {\n      products: {\n        type: Array,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        selectedSize: '', // New data property to store selected size\n      };\n    },\n    methods: {\n      changeSelectedSize(size) {\n        // Implement logic if needed\n      },\n    },\n  };\n  </script>\n  \n  <style>\n  /* Add Tailwind CSS classes here if needed */\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAqD;mBADpE;;EASeA,KAAK,EAAC;AAAmC;;EACvCA,KAAK,EAAC;AAA4C;;;;uBAT/DC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,YAAA,CAmBSC,iBAAA;IAnBDC,GAAG,EAAC,WAAW;IAACL,KAAK,EAAC;;IAFpCM,OAAA,EAAAC,QAAA,CAGqB,MAA2B,E,kBAAxCN,mBAAA,CAiBcO,SAAA,QApBtBC,WAAA,CAGuCC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;2BAA3BC,YAAA,CAiBcC,sBAAA;QAjB4BC,GAAG,EAAEH,OAAO,CAACI;;QAH/DV,OAAA,EAAAC,QAAA,CAIU,MAIE,CAJFU,mBAAA,CAIE;UAHCC,GAAG,EAAEN,OAAO,CAACO,QAAQ;UACrBC,GAAG,EAAER,OAAO,CAACQ,GAAG;UACjBpB,KAAK,EAAC;gCAPlBqB,UAAA,GASUJ,mBAAA,CAUM,OAVNK,UAUM,GATJL,mBAAA,CAQM,OARNM,UAQM,GAPJC,mBAAA,0CAA6C,E,gBAC7CP,mBAAA,CAKE;UAJAQ,IAAI,EAAC,MAAM;UAb3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcyBC,KAAA,CAAAC,YAAY,GAAAF,MAAA;UACrB3B,KAAK,EAAC,mFAAmF;UACzF8B,WAAW,EAAC;uDAFHF,KAAA,CAAAC,YAAY,E;QAdrCE,CAAA;;;IAAAA,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}